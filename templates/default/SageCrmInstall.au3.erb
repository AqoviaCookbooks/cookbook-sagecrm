#include <AutoItConstants.au3>
#include <Date.au3>
#RequireAdmin
#include <ScreenCapture.au3>

$WindowName = "[REGEXPTITLE:(^Sage CRM setup$|^Sage CRM setup \(Trial version\)$); CLASS:#32770]"
$errorInstallShieldWindow = "[REGEXPTITLE:(^Sage CRM - InstallShield Wizard$); CLASS:#32770]"
$exitSetupWindow = "[REGEXPTITLE:(^Exit Setup$); CLASS:#32770]"
$errorDialogWindows = "[REGEXPTITLE:^Sage CRM [^s].*$; CLASS:#32770]"
$otherErrorDialogWindows = "[REGEXPTITLE:(^Sage CRM$|^Sage CRM \(Trial version\)$); CLASS:#32770]"
	
Global $LicenseName = "<%= node['sagecrm']['properties']['License']['Name']  %>"
Global $LicenseCompany = "<%= node['sagecrm']['properties']['License']['Company'] %>"
Global $LicenseSerial = "<%= node['sagecrm']['properties']['License']['Serial'] %>"

Global $DatabaseName = "<%= node['sagecrm']['database']['database_name'] %>"
Global $DatabaseInitialSize = "<%= node['sagecrm']['database']['initial_size'] %>"
Global $DatabaseUsername = "<%= node['sagecrm']['properties']['User'] %>"
Global $DatabasePassword = "<%= node['sagecrm']['properties']['Password'] %>"
Global $DatabaseServerHost = "<%= node['sagecrm']['database']['host'] %>"
Global $DatabaseServerPort = "<%= node['sagecrm']['database']['port'] %>"

Global $Currency = "<%= node['sagecrm']['properties']['Currency'] %>"
Global $Country = "<%= node['sagecrm']['properties']['Country'] %>"
Global $AreaCode = "<%= node['sagecrm']['properties']['AreaCode'] %>"
Global $OutNumber = "<%= node['sagecrm']['properties']['OutNumber'] %>"

Global $ProxyServer = "<%= node['sagecrm']['properties']['ProxyServer'] %>"
Global $ProxyUser = "<%= node['sagecrm']['properties']['ProxyUser'] %>"
Global $ProxyPassword = "<%= node['sagecrm']['properties']['ProxyPassword'] %>"
Global $ProxyDomain = "<%= node['sagecrm']['properties']['ProxyDomain'] %>"
Global $ProxyPort = "<%= node['sagecrm']['properties']['ProxyPort'] %>"
Global $UseHttps = <%= node['sagecrm']['properties']['UseHttps'] ? 'True' : 'False' %>
Global $UseProxy = <%= node['sagecrm']['properties']['UseProxy'] ? 'True' : 'False' %>

Global $CompanyContact = "<%= node['sagecrm']['properties']['Registration']['CompanyContact'] %>"
Global $CompanyEmail = "<%= node['sagecrm']['properties']['Registration']['CompanyEmail'] %>"
Global $CompanyPhone = "<%= node['sagecrm']['properties']['Registration']['CompanyPhone'] %>"

Global $BPName = "<%= node['sagecrm']['properties']['Registration']['BPName'] %>"
Global $BPContact = "<%= node['sagecrm']['properties']['Registration']['BPContact'] %>"
Global $BPEmail = "<%= node['sagecrm']['properties']['Registration']['BPEmail'] %>"
Global $BPPhone = "<%= node['sagecrm']['properties']['Registration']['BPPhone'] %>"

$WorkingDirectory = "<%= @WorkingDirectory %>"

$Command = $WorkingDirectory & "\setup.exe /L0x0409 SageCRMstd"

_ScreenCapture_Capture($WorkingDirectory & "\InstallStep0.jpg")

$opt_flag = $STDIN_CHILD + $STDOUT_CHILD + $STDERR_CHILD

$PID = Run($Command, $WorkingDirectory, @SW_MAXIMIZE, $opt_flag)

Sleep(1000)
If WinActive($errorInstallShieldWindow) Then
   LogToOutput("Install shield error")
   Local $errorMessage = ControlGetText($errorInstallShieldWindow, "", "[CLASS:Static; INSTANCE:2]")
   LogToOutput($errorMessage)
   ControlClick($errorInstallShieldWindow, "",  "[CLASS:Button; TEXT:OK]")
   Exit(1)
EndIf

WinActivate($WindowName)

_ScreenCapture_Capture($WorkingDirectory & "\InstallStep0a.jpg")

WinActive($WindowName)

_ScreenCapture_Capture($WorkingDirectory & "\InstallStep3.jpg")

RunInstall($WindowName)

LogToOutput("Finished installing...")

Exit(0)

Func LogToOutput($message)
	$currentDateTime = _DateFormat(_DateTimeFormat(_NowCalc(), 1), "yyyy-MM-ddTHH:mm:ss+00:00")
	$formattedMesage = "[" & $currentDateTime & "] INFO: " & $message & @CRLF

	ConsoleWrite($formattedMesage)
EndFunc

Func _DateFormat($Date, $style)
	Local $hGui = GUICreate("My GUI get date", 200, 200, 800, 200)
	Local $idDate = GUICtrlCreateDate($Date, 10, 10, 185, 20)
	GUICtrlSendMsg($idDate, 0x1032, 0, $style)
	Local $sReturn = GUICtrlRead($idDate)
	GUIDelete($hGui)
	Return $sReturn
EndFunc

Func WaitForControl($windowName, $text, $controlId, $pollDuration, $numberOfRetries)
   LogToOutput("Waiting for control ('"&$windowName&"', '"&$text&"', '"&$controlId&"')...")
   Local $hCtrl = 0
   Local $counter = 1
   While (True)
	  If WinExists($windowName) Then
		 $hCtrl = ControlGetHandle($windowName, $text, $controlId)
		 If $hCtrl Then
			LogToOutput("Found control ('"&$windowName&"', '"&$text&"', '"&$controlId&"')...")
			Return True
		 Else
			$counter = $counter + 1
			If $counter > $numberOfRetries Then
			   LogToOutput("Failed while waiting for control ('"&$windowName&"', '"&$text&"', '"&$controlId&"')...")
			   Return False
			EndIf
			LogToOutput("Sleep for now...")
			Sleep($pollDuration)
		 EndIf
	  Else
		 LogToOutput("Failed while waiting for control ('"&$windowName&"', '"&$text&"', '"&$controlId&"') as Window '"&$windowName&"' does not exist...")
		 Return False
	  EndIf
   WEnd
   LogToOutput("Failed while waiting for control ('"&$windowName&"', '"&$text&"', '"&$controlId&"')...")
   Return False
EndFunc

Func RunInstall($windowName)
	LogToOutput("Installing...")

	$PollDuration = 500

	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep1.jpg")

   WinActivate($windowName)
   WinActive($windowName)
   WinWaitActive($windowName)

	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep2.jpg")
	LogToOutput("Click next")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next >]")

	If WaitForControl($windowName, "", "[TEXT:License Agreement]", 250, 120) == False Then
	   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep2b.jpg")
	   LogToOutput("Unable to find [TEXT:License Agreement]")
	   Exit(1)
    EndIf

	If WaitForControl($windowName, "", "[CLASS:Button; TEXT:I &accept the terms of the license agreement]", 250, 120) == False Then
		_ScreenCapture_Capture($WorkingDirectory & "\InstallStep3b.jpg")
		LogToOutput("Unable to find [CLASS:Button; TEXT:I &accept the terms of the license agreement]")
		Exit(1)
	EndIf
	ControlCommand($windowName, "", "[CLASS:Button; TEXT:I &accept the terms of the license agreement]", "Check")

   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep4.jpg")
	LogToOutput("Click next")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next >]")

	If WaitForControl($windowName, "", "[TEXT:User Details]", 250, 120) == False Then
	   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep4b.jpg")
	   LogToOutput("Unable to find [TEXT:User Details]")
	   Exit(1)
    EndIf

	;Text in fields is auto populated, so set the values after it is auto populated
	Sleep(500)
   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep5.jpg")

	ControlSetText($windowName, "", 301, $LicenseName)
	ControlSetText($windowName, "", 302, $LicenseCompany)
	ControlSetText($windowName, "", 303, $LicenseSerial)

	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep6.jpg")
	LogToOutput("Click next")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next >]")

	;We checking if there is an error connecting to the database server
	sleep(250)
	$errorControl = WaitForControl($errorDialogWindows, "", 65535, 250, 120)
	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep6b1.jpg")
	If $errorControl == True Then
	     Local $errorMessage = ControlGetText($errorDialogWindows, "", "[CLASS:Static; INSTANCE:2]")
		 LogToOutput($errorMessage)
		 ControlClick($errorDialogWindows, "",  "[CLASS:Button; TEXT:OK]")

		 WaitForControl($windowName, "", "[CLASS:Button; TEXT:Cancel]", 250, 120)
		 ControlClick($windowName, "", "[CLASS:Button; TEXT:Cancel]")

		 WaitForControl($exitSetupWindow, "", "[CLASS:Button; TEXT:&Yes]", 250, 120)
		 ControlClick($exitSetupWindow, "", "[CLASS:Button; TEXT:&Yes]")

		 WaitForControl($windowName, "", "[CLASS:Button; TEXT:Finish]", 250, 120)
		 ControlClick($windowName, "", "[CLASS:Button; TEXT:Finish]")
		 Exit(1)
	 EndIf

	If WaitForControl($windowName, "", "[TEXT:Database Selection]", 250, 120) == False Then
	   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep6b2.jpg")
	   LogToOutput("Unable to find [TEXT:Database Selection]")
	   Exit(1)
    EndIf

   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep7.jpg")
	LogToOutput("Click next")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next]") ;note " >" is missing from button text

	If WaitForControl($windowName, "", "[TEXT:Installation name]", 250, 120) == False Then
	   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep7b.jpg")
	   LogToOutput("Unable to find [TEXT:Installation name]")
	   Exit(1)
    EndIf

	;Text in fields is auto populated, so set the values after it is auto populated
	Sleep(500)
   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep8.jpg")

	ControlSetText($windowName, "", 4, $DatabaseName)

   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep9.jpg")
	LogToOutput("Click next")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next >]")

	WaitForControl($windowName, "", "[TEXT:Choose Destination Location]", 250, 120)
   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep10.jpg")
	LogToOutput("Click next")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next >]")

	WaitForControl($windowName, "", "[TEXT:Database Server Login]", 250, 120)
	;Text in fields is auto populated, so set the values after it is auto populated
	Sleep(500)
	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep11.jpg")

	ControlSetText($windowName, "", 1001, $DatabaseServerHost)
	ControlSetText($windowName, "", 17827, $DatabaseServerPort)
	ControlSetText($windowName, "", 301, $DatabaseUsername)
	ControlSetText($windowName, "", 305, $DatabasePassword)

   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep12.jpg")
	LogToOutput("Click next")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next >]")

	;We checking if there is an error connecting to the database server
	sleep(250)
	$errorControl = WaitForControl($errorDialogWindows, "", 65535, 250, 120)
	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep13.jpg")
	If $errorControl == True Then
	     Local $errorMessage = ControlGetText($errorDialogWindows, "", "[CLASS:Static; INSTANCE:2]")
		 LogToOutput($errorMessage)
		 ControlClick($errorDialogWindows, "",  "[CLASS:Button; TEXT:OK]")

		 WaitForControl($windowName, "", "[CLASS:Button; TEXT:Cancel]", 250, 120)
		 ControlClick($windowName, "", "[CLASS:Button; TEXT:Cancel]")

		 WaitForControl($exitSetupWindow, "", "[CLASS:Button; TEXT:&Yes]", 250, 120)
		 ControlClick($exitSetupWindow, "", "[CLASS:Button; TEXT:&Yes]")

		 WaitForControl($windowName, "", "[CLASS:Button; TEXT:Finish]", 250, 120)
		 ControlClick($windowName, "", "[CLASS:Button; TEXT:Finish]")
		 Exit(1)
	 EndIf

   WaitForControl($windowName, "", "[TEXT:Select Setup type]", 250, 120)
	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep14.jpg")

	ControlClick($windowName, "", 602)

   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep15.jpg")
	LogToOutput("Click next")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next >]")

	WaitForControl($windowName, "", "[TEXT:Select install add ons]", 250, 120)

   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep16.jpg")
	LogToOutput("Click next from 'Select install add ons'")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next >]")

	WaitForControl($windowName, "", "[TEXT:Default Currency]", 250, 120)
	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep17.jpg")

    Sleep(500) ; Population of dropdown data
	ControlCommand($windowName, "", "[CLASS:ComboBox; INSTANCE:1]", "SelectString", $Currency)
    Sleep(1000) ;Give it time to update text on screen
	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep18.jpg")
	LogToOutput("Click next from 'Default Currency'")

	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next]") ;note missing " >"


    _ScreenCapture_Capture($WorkingDirectory & "\InstallStep18b.jpg") ;This guy needs to be between WinWaitActive and WaitForControl. Tried random sleep and it didn't help
	WaitForControl($windowName, "", "[TEXT:CTI information]", 250, 120)

	Sleep(250) ; Population of dropdown data
	ControlCommand($windowName, "", "[CLASS:ComboBox; INSTANCE:1]", "SelectString", $Country)
   sleep(1000)
    _ScreenCapture_Capture($WorkingDirectory & "\InstallStep18c.jpg") ;This guy needs to be between WinWaitActive and WaitForControl. Tried random sleep and it didn't help

	ControlSetText($windowName, "", 1002, $AreaCode)
	ControlSetText($windowName, "", 1003, $OutNumber)

	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep19.jpg")
	LogToOutput("Click next")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next]") ;note missing " >"

	WaitForControl($windowName, "", "[TEXT:HTTP Protocol and Proxy settings]", 250, 120)
	if $UseHttps == True Then
		ControlCommand($windowName, "", 1203, "Check", "")
	Else
		ControlCommand($windowName, "", 1203, "UnCheck", "")
	EndIf

	if $UseProxy == True Then
		ControlCommand($windowName, "", 1202, "Check", "")
		ControlSetText($windowName, "", 1001, $ProxyServer )
		ControlSetText($windowName, "", 1003, $ProxyServer )
		ControlSetText($windowName, "", 1005, $ProxyDomain )
		ControlSetText($windowName, "", 1007, $ProxyUser )
		ControlSetText($windowName, "", 1009, $ProxyPassword )
	Else
		ControlCommand($windowName, "", 1202, "UnCheck", "")
	EndIf

	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep20.jpg")

	LogToOutput("Click next")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next]") ;note missing " >"

    ;CRM 2017 has this extra step so its optional
	$AnalyticsLicenseAgreementControl = WaitForControl($windowName, "", "[TEXT:Analytics License Agreement]", 250, 2)
	if $AnalyticsLicenseAgreementControl == True Then
	  _ScreenCapture_Capture($WorkingDirectory & "\InstallStep21.jpg")
	  LogToOutput("Click next")
	  ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next >]")
	EndIf

	WaitForControl($windowName, "", "[TEXT:Start Copying Files]", 250, 120)
	_ScreenCapture_Capture($WorkingDirectory & "\InstallStep22.jpg")
    LogToOutput("Click next from 'Start Copying Files'")
	ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next >]")

	;If WinExists($windowName) Then
	;	$next = ControlGetHandle($windowName, "", 1)
	;	If $next Then
	;	   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep22.jpg")
	;		LogToOutput("Click next")
	;		ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next >]")
	;	EndIf
   ;EndIf


	$waiting = True
	$counter = 1

   LogToOutput("Start looping until install is done")
	While ($waiting)
		If WinExists($errorDialogWindows) Then
		    LogToOutput("Error Dialog exists - " & $errorDialogWindows )
			_ScreenCapture_Capture($WorkingDirectory & "\InstallStep25.jpg")

			$shouldStopIIS = ControlGetHandle($errorDialogWindows, "", 6)
			If $shouldStopIIS Then
			   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep25a1.jpg")
				LogToOutput("Click Yes")
				ControlClick($errorDialogWindows, "", 6)

			   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep25a2.jpg")
			EndIf

			_ScreenCapture_Capture($WorkingDirectory & "\InstallStep26.jpg")
			$urlRewriterHeadache = ControlGetHandle($errorDialogWindows, "", 2)
			if $urlRewriterHeadache Then
			   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep26b1.jpg")
			   LogToOutput("Click Yes")
			   ControlClick($errorDialogWindows, "", 2)

			   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep26b2.jpg")
			EndIf
		EndIf

		 If WinExists($otherErrorDialogWindows) Then
			LogToOutput("Other Error Dialog exists - " & $otherErrorDialogWindows)
			_ScreenCapture_Capture($WorkingDirectory & "\InstallStep27.jpg")

			$SageMailerHeadache = ControlGetHandle($otherErrorDialogWindows, "", "[CLASS:Button; TEXT:&Close program; INSTANCE:2]")
			if $SageMailerHeadache Then
				_ScreenCapture_Capture($WorkingDirectory & "\InstallStep27c1.jpg")
				LogToOutput("Click Close Program")
				ControlClick($otherErrorDialogWindows, "", "[CLASS:Button; TEXT:&Close program; INSTANCE:2]")

				_ScreenCapture_Capture($WorkingDirectory & "\InstallStep27c2.jpg")
		 	EndIf
		 EndIf

		 If WinExists($windowName) Then
			LogToOutput("Window exists - " & $windowName)
			_ScreenCapture_Capture($WorkingDirectory & "\InstallStep28.jpg")

			;Breaking 2017 install as its aborting early
			;$abortedInstallationCompleted = ControlGetHandle($windowName, "", 1312)
			;LogToOutput("Checked for abortedInstallationCompleted - " & $abortedInstallationCompleted )
			;If $abortedInstallationCompleted Then
			;   WinActivate($windowName)
			;   WinActive($windowName)
			;   WinWaitActive($windowName)
			;   LogToOutput("Abort installation completed found - "  & $abortedInstallationCompleted)
			;   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep28d1.jpg")
			;   LogToOutput("Error Dialog - " & $abortedInstallationCompleted )
			;   $waiting = False
			;EndIf

			;CRM 7.2a.1 has this extra step so its optional
			$registrationControl = WaitForControl($windowName, "", "[TEXT:Registration]", 250, 2)
			LogToOutput("Checked for $registrationControl - [TEXT:Registration]")
			if $registrationControl == True Then
			   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep28b1.jpg")

			   ControlSetText($windowName, "", 1312, $CompanyContact )
			   ControlSetText($windowName, "", 1314, $CompanyEmail )
			   ControlSetText($windowName, "", 1318, $CompanyPhone )

			   ControlSetText($windowName, "", 1321, $BPName )
			   ControlSetText($windowName, "", 1323, $BPContact )
			   ControlSetText($windowName, "", 1325, $BPEmail )
			   ControlSetText($windowName, "", 1329, $BPPhone )

			   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep28b2.jpg")
			   LogToOutput("Click next")
			   ControlClick($windowName, "", "[CLASS:Button; TEXT:&Next]") ;note missing " >"

			   If WinActive($errorInstallShieldWindow) Then
				  LogToOutput("Install shield error")
				  Local $errorMessage = ControlGetText($errorInstallShieldWindow, "", "[CLASS:Static; INSTANCE:2]")
				  LogToOutput($errorMessage)
				  ControlClick($errorInstallShieldWindow, "",  "[CLASS:Button; TEXT:OK]")
				  ;no way to exit install at this point
				  Exit(1)
			   EndIf
			EndIf

		    $installationCompleted = ControlGetHandle($windowName, "", "[CLASS:Button; TEXT:Finish]")
			LogToOutput("Checked for $installationCompleted - " & $installationCompleted )
		    If $installationCompleted Then
			   _ScreenCapture_Capture($WorkingDirectory & "\InstallStep28c1.jpg")

			   ;Optional checkbox only for SageCrm 2017
			   $openSageCrmHelpCenterCheckbox = WaitForControl($windowName, "", "[CLASS:Button; TEXT:&Open Sage CRM help center.]", 250, 4)
			   If ($openSageCrmHelpCenterCheckbox) == True Then
				  LogToOutput("Open Sage Crm help center checkbox - " & $openSageCrmHelpCenterCheckbox )
				  _ScreenCapture_Capture($WorkingDirectory & "\InstallStep28c2.jpg")
				  ;[CLASS:Button; INSTANCE:2]
				  ;&Open Sage CRM help center.
				  ControlCommand($windowName, "", "[CLASS:Button; TEXT:&Open Sage CRM help center.]", "UnCheck", "")
			   EndIf

			   ;Optional checkbox only for SageCrm 7.2a.1
			   $viewTheReadmeFileCheckbox = WaitForControl($windowName, "", "[CLASS:Button; TEXT:&View the Readme file.]", 250, 4)
			   If $viewTheReadmeFileCheckbox == True Then
				  LogToOutput("View the Readme file checkbox - " & $openSageCrmHelpCenterCheckbox )
				  _ScreenCapture_Capture($WorkingDirectory & "\InstallStep28c3.jpg")
				  ;[CLASS:Button; INSTANCE:2]
				  ;&View the Readme file.
				  ControlCommand($windowName, "", "[CLASS:Button; TEXT:&View the Readme file.]", "UnCheck", "")
			   EndIf

			   $launchSageCrmNowCheckbox = WaitForControl($windowName, "", "[CLASS:Button; TEXT:&Launch Sage CRM now.]", 250, 4)
			   If $launchSageCrmNowCheckbox == True Then
				  LogToOutput("Launch Sage Crm now checkbox - " & $launchSageCrmNowCheckbox)
				  _ScreenCapture_Capture($WorkingDirectory & "\InstallStep28d1.jpg")
				  ;[CLASS:Button; INSTANCE:1]
				  ;&Launch Sage CRM now.
				  ControlCommand($windowName, "", "[CLASS:Button; TEXT:&Launch Sage CRM now.]", "UnCheck", "")

				  LogToOutput("Installation complete finish button - " & $installationCompleted )
				  LogToOutput("Click Finish")
				  ControlClick($windowName, "", "[CLASS:Button; TEXT:Finish]")
				  $waiting = False
			   EndIf
			EndIf
		 EndIf

		 $counter = $counter + 1
		 If $counter > 1200 Then
			LogToOutput("Something went wrong during installation process")
			Exit(1)
		 Else
			Sleep(500)
		 EndIf
	WEnd

	WinWaitClose($windowName, "", 30)

	Return True
EndFunc